// Code generated from Feature.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 20, 209,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 3, 2, 7, 2, 43, 10, 2, 12, 2, 14,
	2, 46, 11, 2, 3, 2, 3, 2, 7, 2, 50, 10, 2, 12, 2, 14, 2, 53, 11, 2, 3,
	2, 3, 2, 5, 2, 57, 10, 2, 3, 2, 3, 2, 3, 3, 3, 3, 6, 3, 63, 10, 3, 13,
	3, 14, 3, 64, 3, 3, 3, 3, 5, 3, 69, 10, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 5, 4, 83, 10, 4, 3, 5, 3, 5,
	3, 5, 3, 5, 3, 5, 5, 5, 90, 10, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
	3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 5, 6, 104, 10, 6, 3, 7, 3, 7, 3, 7,
	3, 7, 3, 7, 3, 7, 5, 7, 112, 10, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8,
	3, 8, 5, 8, 121, 10, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9,
	3, 9, 3, 9, 3, 9, 3, 9, 5, 9, 135, 10, 9, 3, 9, 7, 9, 138, 10, 9, 12, 9,
	14, 9, 141, 11, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 5, 10, 157, 10, 10, 3, 10, 7,
	10, 160, 10, 10, 12, 10, 14, 10, 163, 11, 10, 3, 10, 3, 10, 3, 11, 3, 11,
	3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 5, 11, 176, 10, 11, 3,
	11, 7, 11, 179, 10, 11, 12, 11, 14, 11, 182, 11, 11, 3, 11, 3, 11, 3, 12,
	3, 12, 3, 13, 3, 13, 3, 13, 5, 13, 191, 10, 13, 3, 14, 3, 14, 3, 15, 3,
	15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 6, 19, 204, 10, 19,
	13, 19, 14, 19, 205, 3, 20, 3, 20, 4, 51, 205, 2, 21, 3, 3, 5, 4, 7, 5,
	9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27,
	15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 2, 3, 2, 5, 3, 2, 34, 34,
	4, 2, 11, 11, 34, 34, 6, 2, 11, 12, 15, 15, 34, 34, 42, 43, 2, 230, 2,
	3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2,
	11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2,
	2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2,
	2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2,
	2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 3, 44, 3, 2, 2, 2, 5, 60, 3,
	2, 2, 2, 7, 82, 3, 2, 2, 2, 9, 89, 3, 2, 2, 2, 11, 103, 3, 2, 2, 2, 13,
	111, 3, 2, 2, 2, 15, 120, 3, 2, 2, 2, 17, 134, 3, 2, 2, 2, 19, 156, 3,
	2, 2, 2, 21, 175, 3, 2, 2, 2, 23, 185, 3, 2, 2, 2, 25, 190, 3, 2, 2, 2,
	27, 192, 3, 2, 2, 2, 29, 194, 3, 2, 2, 2, 31, 196, 3, 2, 2, 2, 33, 198,
	3, 2, 2, 2, 35, 200, 3, 2, 2, 2, 37, 203, 3, 2, 2, 2, 39, 207, 3, 2, 2,
	2, 41, 43, 5, 23, 12, 2, 42, 41, 3, 2, 2, 2, 43, 46, 3, 2, 2, 2, 44, 42,
	3, 2, 2, 2, 44, 45, 3, 2, 2, 2, 45, 47, 3, 2, 2, 2, 46, 44, 3, 2, 2, 2,
	47, 51, 7, 37, 2, 2, 48, 50, 11, 2, 2, 2, 49, 48, 3, 2, 2, 2, 50, 53, 3,
	2, 2, 2, 51, 52, 3, 2, 2, 2, 51, 49, 3, 2, 2, 2, 52, 56, 3, 2, 2, 2, 53,
	51, 3, 2, 2, 2, 54, 57, 5, 25, 13, 2, 55, 57, 7, 2, 2, 3, 56, 54, 3, 2,
	2, 2, 56, 55, 3, 2, 2, 2, 57, 58, 3, 2, 2, 2, 58, 59, 8, 2, 2, 2, 59, 4,
	3, 2, 2, 2, 60, 62, 5, 25, 13, 2, 61, 63, 5, 23, 12, 2, 62, 61, 3, 2, 2,
	2, 63, 64, 3, 2, 2, 2, 64, 62, 3, 2, 2, 2, 64, 65, 3, 2, 2, 2, 65, 68,
	3, 2, 2, 2, 66, 69, 5, 25, 13, 2, 67, 69, 7, 2, 2, 3, 68, 66, 3, 2, 2,
	2, 68, 67, 3, 2, 2, 2, 69, 70, 3, 2, 2, 2, 70, 71, 8, 3, 3, 2, 71, 6, 3,
	2, 2, 2, 72, 73, 7, 67, 2, 2, 73, 74, 7, 112, 2, 2, 74, 75, 7, 102, 2,
	2, 75, 83, 7, 34, 2, 2, 76, 77, 7, 32782, 2, 2, 77, 83, 7, 19990, 2, 2,
	78, 79, 7, 24184, 2, 2, 79, 83, 7, 19990, 2, 2, 80, 81, 7, 21518, 2, 2,
	81, 83, 7, 26104, 2, 2, 82, 72, 3, 2, 2, 2, 82, 76, 3, 2, 2, 2, 82, 78,
	3, 2, 2, 2, 82, 80, 3, 2, 2, 2, 83, 8, 3, 2, 2, 2, 84, 85, 7, 81, 2, 2,
	85, 86, 7, 116, 2, 2, 86, 90, 7, 34, 2, 2, 87, 88, 7, 25112, 2, 2, 88,
	90, 7, 32775, 2, 2, 89, 84, 3, 2, 2, 2, 89, 87, 3, 2, 2, 2, 90, 10, 3,
	2, 2, 2, 91, 92, 7, 73, 2, 2, 92, 93, 7, 107, 2, 2, 93, 94, 7, 120, 2,
	2, 94, 95, 7, 103, 2, 2, 95, 96, 7, 112, 2, 2, 96, 104, 7, 34, 2, 2, 97,
	98, 7, 20553, 2, 2, 98, 104, 7, 22916, 2, 2, 99, 100, 7, 20553, 2, 2, 100,
	104, 7, 35776, 2, 2, 101, 102, 7, 20553, 2, 2, 102, 104, 7, 23452, 2, 2,
	103, 91, 3, 2, 2, 2, 103, 97, 3, 2, 2, 2, 103, 99, 3, 2, 2, 2, 103, 101,
	3, 2, 2, 2, 104, 12, 3, 2, 2, 2, 105, 106, 7, 89, 2, 2, 106, 107, 7, 106,
	2, 2, 107, 108, 7, 103, 2, 2, 108, 109, 7, 112, 2, 2, 109, 112, 7, 34,
	2, 2, 110, 112, 7, 24405, 2, 2, 111, 105, 3, 2, 2, 2, 111, 110, 3, 2, 2,
	2, 112, 14, 3, 2, 2, 2, 113, 114, 7, 86, 2, 2, 114, 115, 7, 106, 2, 2,
	115, 116, 7, 103, 2, 2, 116, 117, 7, 112, 2, 2, 117, 121, 7, 34, 2, 2,
	118, 119, 7, 37029, 2, 2, 119, 121, 7, 20042, 2, 2, 120, 113, 3, 2, 2,
	2, 120, 118, 3, 2, 2, 2, 121, 16, 3, 2, 2, 2, 122, 123, 7, 68, 2, 2, 123,
	124, 7, 99, 2, 2, 124, 125, 7, 101, 2, 2, 125, 126, 7, 109, 2, 2, 126,
	127, 7, 105, 2, 2, 127, 128, 7, 116, 2, 2, 128, 129, 7, 113, 2, 2, 129,
	130, 7, 119, 2, 2, 130, 131, 7, 112, 2, 2, 131, 135, 7, 102, 2, 2, 132,
	133, 7, 32974, 2, 2, 133, 135, 7, 26225, 2, 2, 134, 122, 3, 2, 2, 2, 134,
	132, 3, 2, 2, 2, 135, 139, 3, 2, 2, 2, 136, 138, 9, 2, 2, 2, 137, 136,
	3, 2, 2, 2, 138, 141, 3, 2, 2, 2, 139, 137, 3, 2, 2, 2, 139, 140, 3, 2,
	2, 2, 140, 142, 3, 2, 2, 2, 141, 139, 3, 2, 2, 2, 142, 143, 5, 39, 20,
	2, 143, 18, 3, 2, 2, 2, 144, 145, 7, 85, 2, 2, 145, 146, 7, 101, 2, 2,
	146, 147, 7, 103, 2, 2, 147, 148, 7, 112, 2, 2, 148, 149, 7, 99, 2, 2,
	149, 150, 7, 116, 2, 2, 150, 151, 7, 107, 2, 2, 151, 157, 7, 113, 2, 2,
	152, 153, 7, 22332, 2, 2, 153, 157, 7, 26225, 2, 2, 154, 155, 7, 21097,
	2, 2, 155, 157, 7, 26414, 2, 2, 156, 144, 3, 2, 2, 2, 156, 152, 3, 2, 2,
	2, 156, 154, 3, 2, 2, 2, 157, 161, 3, 2, 2, 2, 158, 160, 9, 2, 2, 2, 159,
	158, 3, 2, 2, 2, 160, 163, 3, 2, 2, 2, 161, 159, 3, 2, 2, 2, 161, 162,
	3, 2, 2, 2, 162, 164, 3, 2, 2, 2, 163, 161, 3, 2, 2, 2, 164, 165, 5, 39,
	20, 2, 165, 20, 3, 2, 2, 2, 166, 167, 7, 72, 2, 2, 167, 168, 7, 103, 2,
	2, 168, 169, 7, 99, 2, 2, 169, 170, 7, 118, 2, 2, 170, 171, 7, 119, 2,
	2, 171, 172, 7, 116, 2, 2, 172, 176, 7, 103, 2, 2, 173, 174, 7, 21153,
	2, 2, 174, 176, 7, 33023, 2, 2, 175, 166, 3, 2, 2, 2, 175, 173, 3, 2, 2,
	2, 176, 180, 3, 2, 2, 2, 177, 179, 9, 2, 2, 2, 178, 177, 3, 2, 2, 2, 179,
	182, 3, 2, 2, 2, 180, 178, 3, 2, 2, 2, 180, 181, 3, 2, 2, 2, 181, 183,
	3, 2, 2, 2, 182, 180, 3, 2, 2, 2, 183, 184, 5, 39, 20, 2, 184, 22, 3, 2,
	2, 2, 185, 186, 9, 3, 2, 2, 186, 24, 3, 2, 2, 2, 187, 188, 7, 15, 2, 2,
	188, 191, 7, 12, 2, 2, 189, 191, 7, 12, 2, 2, 190, 187, 3, 2, 2, 2, 190,
	189, 3, 2, 2, 2, 191, 26, 3, 2, 2, 2, 192, 193, 7, 36, 2, 2, 193, 28, 3,
	2, 2, 2, 194, 195, 7, 42, 2, 2, 195, 30, 3, 2, 2, 2, 196, 197, 7, 43, 2,
	2, 197, 32, 3, 2, 2, 2, 198, 199, 7, 66, 2, 2, 199, 34, 3, 2, 2, 2, 200,
	201, 7, 126, 2, 2, 201, 36, 3, 2, 2, 2, 202, 204, 10, 4, 2, 2, 203, 202,
	3, 2, 2, 2, 204, 205, 3, 2, 2, 2, 205, 206, 3, 2, 2, 2, 205, 203, 3, 2,
	2, 2, 206, 38, 3, 2, 2, 2, 207, 208, 7, 60, 2, 2, 208, 40, 3, 2, 2, 2,
	21, 2, 44, 51, 56, 64, 68, 82, 89, 103, 111, 120, 134, 139, 156, 161, 175,
	180, 190, 205, 4, 2, 4, 2, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "'\"'", "'('", "')'",
	"'@'", "'|'",
}

var lexerSymbolicNames = []string{
	"", "Comment", "EmptyLine", "And", "Or", "Given", "When", "Then", "Background",
	"Scenario", "Feature", "Space", "NewLine", "Quote", "LBracket", "RBracket",
	"At", "Pipe", "Char",
}

var lexerRuleNames = []string{
	"Comment", "EmptyLine", "And", "Or", "Given", "When", "Then", "Background",
	"Scenario", "Feature", "Space", "NewLine", "Quote", "LBracket", "RBracket",
	"At", "Pipe", "Char", "COLON",
}

type FeatureLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewFeatureLexer(input antlr.CharStream) *FeatureLexer {

	l := new(FeatureLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Feature.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FeatureLexer tokens.
const (
	FeatureLexerComment    = 1
	FeatureLexerEmptyLine  = 2
	FeatureLexerAnd        = 3
	FeatureLexerOr         = 4
	FeatureLexerGiven      = 5
	FeatureLexerWhen       = 6
	FeatureLexerThen       = 7
	FeatureLexerBackground = 8
	FeatureLexerScenario   = 9
	FeatureLexerFeature    = 10
	FeatureLexerSpace      = 11
	FeatureLexerNewLine    = 12
	FeatureLexerQuote      = 13
	FeatureLexerLBracket   = 14
	FeatureLexerRBracket   = 15
	FeatureLexerAt         = 16
	FeatureLexerPipe       = 17
	FeatureLexerChar       = 18
)
